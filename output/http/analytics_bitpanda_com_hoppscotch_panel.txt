[hoppscotch-panel] Dumped HTTP request for https://analytics.bitpanda.com


GET / HTTP/1.1
Host: analytics.bitpanda.com
User-Agent: Mozilla/5.0 (Debian; Linux i686; rv:120.0) Gecko/20100101 Firefox/120.0
Connection: close
Accept: */*
Accept-Language: en
Cookie: _cfuvid=HrWMgRYZozF.Z0cSSie7VlSZa1lkMZrxuNp6J2YxQDI-1754398150658-0.0.1.1-604800000
X-Bug-Bounty: Bugcrowd-eno@bugcrowdninja.com
Accept-Encoding: gzip


[hoppscotch-panel] Dumped HTTP response https://analytics.bitpanda.com

HTTP/1.1 200 OK
Connection: close
Transfer-Encoding: chunked
Access-Control-Allow-Credentials: true
Cf-Cache-Status: DYNAMIC
Cf-Ray: 96a669ba8bf1ef5e-IAD
Content-Type: application/json; charset=utf-8
Date: Tue, 05 Aug 2025 12:49:11 GMT
Etag: W/"289c0-RWBH+Hbb+JEYcexzsh/bQ84cEaw"
Server: cloudflare
Set-Cookie: _cfuvid=OMVMyhsQR1FQCb_ntmYz12nKNlJkOJgbflUcK_WSe_Y-1754398151385-0.0.1.1-604800000; path=/; domain=.bitpanda.com; HttpOnly; Secure; SameSite=None
Strict-Transport-Security: max-age=15552000; includeSubDomains; preload
Vary: Origin, Accept-Encoding
X-Content-Type-Options: nosniff
X-Powered-By: Express

{"body":"","bodyEncoding":"base64","headers":{"accept-ranges":"bytes","vary":"Accept-Encoding","content-type":"text/html","content-security-policy":"script-src  'nonce-7NYQPDmQ4J2LWyz0aBGeOA' 'report-sample' 'strict-dynamic' 'unsafe-eval' 'unsafe-hashes' 'unsafe-inline' http: https:; object-src 'none'; report-uri https://csp.withgoogle.com/csp/uxe-owners-acl/marketing_platform; base-uri 'self'","content-security-policy-report-only":"require-trusted-types-for 'script'; report-uri https://csp.withgoogle.com/csp/uxe-owners-acl/marketing_platform","cross-origin-resource-policy":"cross-origin","cross-origin-opener-policy-report-only":"same-origin; report-to=\"uxe-owners-acl/marketing_platform\"","report-to":"{\"group\":\"uxe-owners-acl/marketing_platform\",\"max_age\":2592000,\"endpoints\":[{\"url\":\"https://csp.withgoogle.com/csp/report-to/uxe-owners-acl/marketing_platform\"}]}","content-length":"118404","date":"Tue, 05 Aug 2025 12:49:11 GMT","pragma":"no-cache","expires":"Fri, 01 Jan 1990 00:00:00 GMT","cache-control":"no-cache, must-revalidate","last-modified":"Fri, 04 Apr 2025 11:18:00 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","connection":"close"},"status":200,"statusDescription":"Found"}
